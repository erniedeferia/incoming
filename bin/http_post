#!/usr/bin/env ruby

require 'incoming'
require 'net/http'
require 'uri'
require 'openssl'
require 'securerandom'
require 'optparse'

options = {
  secret: nil
}

OptionParser.new do |opts|
  opts.banner = "Usage: http_post [options] [http endpoint] < input"
  opts.on('-s', '--secret [secret]') { |s| options[:secret] = s }

  opts.parse!
end

begin
  http_endpoint = URI.parse(ARGV[0])
rescue URI::InvalidURIError
  puts 'Unable to parse http endpoint. Is it a valid URI?'
  exit
end

timestamp = Time.now.to_i
token = SecureRandom.hash
signature = OpenSSL::HMAC.hexdigest(OpenSSL::Digest.new('SHA256'), options[:secret], [timestamp, token].join)

data = { :message => STDIN.read, :timestamp => timestamp, :token => token, :signature => signature }
headers = {}

req = Net::HTTP::Post.new(http_endpoint.path, headers)
req.form_data = data
req.basic_auth http_endpoint.user, http_endpoint.password if http_endpoint.user

resp, data = Net::HTTP.new(http_endpoint.host, http_endpoint.port).start {|http|
  http.request(req)
}

puts resp.body
